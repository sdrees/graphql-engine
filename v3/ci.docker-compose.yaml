name: v3-engine-tests

services:
  postgres:
    extends:
      file: ./docker-compose.yaml
      service: postgres

  postgres_connector:
    image: ghcr.io/hasura/ndc-postgres:dev-main
    ports:
      - 8080:8080
    environment:
      CONNECTION_URI: "postgresql://postgres:password@postgres"
      OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: "http://jaeger:4317"
      OTEL_SERVICE_NAME: "ndc-postgres"
      RUST_LOG: info
    volumes:
      - type: bind
        source: ./crates/engine/tests/ndc-postgres-configuration
        target: /etc/connector
        read_only: true
    depends_on:
      postgres:
        condition: service_healthy

  custom_connector:
    build:
      dockerfile: custom-connector.Dockerfile
    entrypoint:
      - ./bin/custom-connector
    ports:
      - "8102:8102"
    environment:
      RUST_LOG: info
      ENABLE_RELATIONSHIP_SUPPORT: "1" # Enabled
    healthcheck:
      test: curl -fsS http://localhost:8102/schema
      start_period: 5s
      interval: 5s
      timeout: 10s
      retries: 20

  custom_connector_no_relationships:
    build:
      dockerfile: custom-connector.Dockerfile
    entrypoint:
      - ./bin/custom-connector
    ports:
      - "8103:8102"
    environment:
      RUST_LOG: info
      ENABLE_RELATIONSHIP_SUPPORT: "0" # Disabled
    healthcheck:
      test: curl -fsS http://localhost:8102/schema
      start_period: 5s
      interval: 5s
      timeout: 10s
      retries: 20

  custom_connector_ndc_v01:
    # This is the v3-engine commit version before the custom connector got upgraded to ndc_models v0.2.0
    image: ghcr.io/hasura/v3-custom-connector:bef8a750ca31b067952247ad348683a4faa843f5
    ports:
      - "8101:8101"
    environment:
      RUST_LOG: info

  # Required to test graphql-ws; subscriptions with custom session variables
  auth_hook:
    build:
      dockerfile: dev-auth-webhook.Dockerfile
    environment:
      RUST_LOG: debug
    ports:
      - "3050:3050"

  # To make debugging locally less painful
  jaeger:
    image: jaegertracing/all-in-one:1.55
    restart: always
    ports:
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 4002:16686
      - 14250:14250
      - 14268:14268
      - 14269:14269
      - 4317:4317 # OTLP gRPC
      - 4318:4318 # OTLP HTTP
      - 9411:9411
    environment:
      COLLECTOR_OTLP_ENABLED: "true"
      COLLECTOR_ZIPKIN_HOST_PORT: "9411"

volumes:
  postgres:
