{
  "subgraphs": [
    {
      "name": "globals",
      "objects": [
        {
          "definition": {
            "mode": {
              "noAuth": {
                "role": "admin",
                "sessionVariables": {}
              }
            }
          },
          "kind": "AuthConfig",
          "version": "v2"
        },
        {
          "date": "2024-08-27",
          "kind": "CompatibilityConfig"
        },
        {
          "definition": {
            "apolloFederation": null,
            "mutation": {
              "rootOperationTypeName": "Mutation"
            },
            "query": {
              "aggregate": {
                "countDistinctFieldName": "_count_distinct",
                "countFieldName": "_count",
                "filterInputFieldName": "filter_input"
              },
              "argumentsInput": {
                "fieldName": "args"
              },
              "filterInput": {
                "fieldName": "where",
                "operatorNames": {
                  "and": "_and",
                  "isNull": "_is_null",
                  "not": "_not",
                  "or": "_or"
                }
              },
              "limitInput": {
                "fieldName": "limit"
              },
              "offsetInput": {
                "fieldName": "offset"
              },
              "orderByInput": {
                "enumDirectionValues": {
                  "asc": "Asc",
                  "desc": "Desc"
                },
                "enumTypeNames": [
                  {
                    "directions": ["Asc", "Desc"],
                    "typeName": "OrderBy"
                  }
                ],
                "fieldName": "order_by"
              },
              "rootOperationTypeName": "Query"
            }
          },
          "kind": "GraphqlConfig",
          "version": "v1"
        }
      ]
    },
    {
      "name": "app",
      "objects": [
        {
          "definition": {
            "dataConnectorTypeMapping": [
              {
                "dataConnectorName": "elasticsearch",
                "dataConnectorObjectType": "address",
                "fieldMapping": {}
              }
            ],
            "description": null,
            "fields": [
              {
                "arguments": [],
                "deprecated": null,
                "description": null,
                "name": "city",
                "type": "Text!"
              },
              {
                "arguments": [],
                "deprecated": null,
                "description": null,
                "name": "zip",
                "type": "Integer!"
              }
            ],
            "globalIdFields": null,
            "graphql": {
              "apolloFederation": null,
              "inputTypeName": "AddressInput",
              "typeName": "Address"
            },
            "name": "Address"
          },
          "kind": "ObjectType",
          "version": "v1"
        },
        {
          "definition": {
            "permissions": [
              {
                "input": null,
                "output": {
                  "allowedFields": ["city", "zip"]
                },
                "role": "admin"
              }
            ],
            "typeName": "Address"
          },
          "kind": "TypePermissions",
          "version": "v1"
        },
        {
          "definition": {
            "dataConnectorTypeMapping": [
              {
                "dataConnectorName": "elasticsearch",
                "dataConnectorObjectType": "identification",
                "fieldMapping": {
                  "address": {
                    "column": {
                      "argumentMapping": null,
                      "name": "address"
                    }
                  },
                  "age": {
                    "column": {
                      "argumentMapping": null,
                      "name": "age"
                    }
                  },
                  "id": {
                    "column": {
                      "argumentMapping": null,
                      "name": "_id"
                    }
                  },
                  "name": {
                    "column": {
                      "argumentMapping": null,
                      "name": "name"
                    }
                  }
                }
              }
            ],
            "description": null,
            "fields": [
              {
                "arguments": [],
                "deprecated": null,
                "description": null,
                "name": "id",
                "type": "Id!"
              },
              {
                "arguments": [],
                "deprecated": null,
                "description": null,
                "name": "address",
                "type": "[Address!]!"
              },
              {
                "arguments": [],
                "deprecated": null,
                "description": null,
                "name": "age",
                "type": "Integer!"
              },
              {
                "arguments": [],
                "deprecated": null,
                "description": null,
                "name": "name",
                "type": "Keyword!"
              }
            ],
            "globalIdFields": null,
            "graphql": {
              "apolloFederation": null,
              "inputTypeName": "IdentificationInput",
              "typeName": "Identification"
            },
            "name": "Identification"
          },
          "kind": "ObjectType",
          "version": "v1"
        },
        {
          "definition": {
            "permissions": [
              {
                "input": null,
                "output": {
                  "allowedFields": ["id", "address", "age", "name"]
                },
                "role": "admin"
              }
            ],
            "typeName": "Identification"
          },
          "kind": "TypePermissions",
          "version": "v1"
        },
        {
          "definition": {
            "comparableFields": [
              {
                "fieldName": "id",
                "operators": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "address",
                "operators": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "age",
                "operators": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "name",
                "operators": {
                  "enableAll": true
                }
              }
            ],
            "dataConnectorName": "elasticsearch",
            "dataConnectorObjectType": "identification",
            "graphql": {
              "typeName": "IdentificationBoolExp"
            },
            "name": "IdentificationBoolExp",
            "objectType": "Identification"
          },
          "kind": "ObjectBooleanExpressionType",
          "version": "v1"
        },
        {
          "definition": {
            "aggregateExpression": null,
            "arguments": [],
            "description": null,
            "filterExpressionType": "IdentificationBoolExp",
            "globalIdSource": false,
            "graphql": {
              "aggregate": null,
              "apolloFederation": null,
              "argumentsInputType": null,
              "filterInputTypeName": null,
              "orderByExpressionType": "IdentificationOrderBy",
              "selectMany": {
                "deprecated": null,
                "description": null,
                "queryRootField": "identification",
                "subscription": null
              },
              "selectUniques": []
            },
            "name": "Identification",
            "objectType": "Identification",
            "orderableFields": [
              {
                "fieldName": "id",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "address",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "age",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "name",
                "orderByDirections": {
                  "enableAll": true
                }
              }
            ],
            "source": {
              "argumentMapping": {},
              "collection": "identification",
              "dataConnectorName": "elasticsearch"
            }
          },
          "kind": "Model",
          "version": "v1"
        },
        {
          "definition": {
            "modelName": "Identification",
            "permissions": [
              {
                "role": "admin",
                "select": {
                  "allowSubscriptions": false,
                  "argumentPresets": [],
                  "filter": null
                }
              }
            ]
          },
          "kind": "ModelPermissions",
          "version": "v1"
        },
        {
          "definition": {
            "dataConnectorTypeMapping": [
              {
                "dataConnectorName": "elasticsearch",
                "dataConnectorObjectType": "my_book_index",
                "fieldMapping": {
                  "author": {
                    "column": {
                      "argumentMapping": null,
                      "name": "author"
                    }
                  },
                  "description": {
                    "column": {
                      "argumentMapping": null,
                      "name": "description"
                    }
                  },
                  "genre": {
                    "column": {
                      "argumentMapping": null,
                      "name": "genre"
                    }
                  },
                  "id": {
                    "column": {
                      "argumentMapping": null,
                      "name": "_id"
                    }
                  },
                  "pages": {
                    "column": {
                      "argumentMapping": null,
                      "name": "pages"
                    }
                  },
                  "publishedDate": {
                    "column": {
                      "argumentMapping": null,
                      "name": "published_date"
                    }
                  },
                  "rating": {
                    "column": {
                      "argumentMapping": null,
                      "name": "rating"
                    }
                  },
                  "title": {
                    "column": {
                      "argumentMapping": null,
                      "name": "title"
                    }
                  }
                }
              }
            ],
            "description": null,
            "fields": [
              {
                "arguments": [],
                "deprecated": null,
                "description": null,
                "name": "id",
                "type": "Id!"
              },
              {
                "arguments": [],
                "deprecated": null,
                "description": null,
                "name": "author",
                "type": "Keyword!"
              },
              {
                "arguments": [],
                "deprecated": null,
                "description": null,
                "name": "description",
                "type": "Text!"
              },
              {
                "arguments": [],
                "deprecated": null,
                "description": null,
                "name": "genre",
                "type": "Keyword!"
              },
              {
                "arguments": [],
                "deprecated": null,
                "description": null,
                "name": "pages",
                "type": "Integer!"
              },
              {
                "arguments": [],
                "deprecated": null,
                "description": null,
                "name": "publishedDate",
                "type": "Date!"
              },
              {
                "arguments": [],
                "deprecated": null,
                "description": null,
                "name": "rating",
                "type": "Float_1!"
              },
              {
                "arguments": [],
                "deprecated": null,
                "description": null,
                "name": "title",
                "type": "TextKeyword!"
              }
            ],
            "globalIdFields": null,
            "graphql": {
              "apolloFederation": null,
              "inputTypeName": "MyBookIndexInput",
              "typeName": "MyBookIndex"
            },
            "name": "MyBookIndex"
          },
          "kind": "ObjectType",
          "version": "v1"
        },
        {
          "definition": {
            "permissions": [
              {
                "input": null,
                "output": {
                  "allowedFields": [
                    "id",
                    "author",
                    "description",
                    "genre",
                    "pages",
                    "publishedDate",
                    "rating",
                    "title"
                  ]
                },
                "role": "admin"
              }
            ],
            "typeName": "MyBookIndex"
          },
          "kind": "TypePermissions",
          "version": "v1"
        },
        {
          "definition": {
            "comparableFields": [
              {
                "fieldName": "id",
                "operators": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "author",
                "operators": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "description",
                "operators": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "genre",
                "operators": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "pages",
                "operators": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "publishedDate",
                "operators": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "rating",
                "operators": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "title",
                "operators": {
                  "enableAll": true
                }
              }
            ],
            "dataConnectorName": "elasticsearch",
            "dataConnectorObjectType": "my_book_index",
            "graphql": {
              "typeName": "MyBookIndexBoolExp"
            },
            "name": "MyBookIndexBoolExp",
            "objectType": "MyBookIndex"
          },
          "kind": "ObjectBooleanExpressionType",
          "version": "v1"
        },
        {
          "definition": {
            "aggregateExpression": null,
            "arguments": [],
            "description": null,
            "filterExpressionType": "MyBookIndexBoolExp",
            "globalIdSource": false,
            "graphql": {
              "aggregate": null,
              "apolloFederation": null,
              "argumentsInputType": null,
              "filterInputTypeName": null,
              "orderByExpressionType": "MyBookIndexOrderBy",
              "selectMany": {
                "deprecated": null,
                "description": null,
                "queryRootField": "myBookIndex",
                "subscription": null
              },
              "selectUniques": []
            },
            "name": "MyBookIndex",
            "objectType": "MyBookIndex",
            "orderableFields": [
              {
                "fieldName": "id",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "author",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "description",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "genre",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "pages",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "publishedDate",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "rating",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "title",
                "orderByDirections": {
                  "enableAll": true
                }
              }
            ],
            "source": {
              "argumentMapping": {},
              "collection": "my_book_index",
              "dataConnectorName": "elasticsearch"
            }
          },
          "kind": "Model",
          "version": "v1"
        },
        {
          "definition": {
            "modelName": "MyBookIndex",
            "permissions": [
              {
                "role": "admin",
                "select": {
                  "allowSubscriptions": false,
                  "argumentPresets": [],
                  "filter": null
                }
              }
            ]
          },
          "kind": "ModelPermissions",
          "version": "v1"
        },
        {
          "definition": {
            "description": null,
            "graphql": {
              "typeName": "Id"
            },
            "name": "Id"
          },
          "kind": "ScalarType",
          "version": "v1"
        },
        {
          "definition": {
            "description": null,
            "graphql": {
              "typeName": "Text"
            },
            "name": "Text"
          },
          "kind": "ScalarType",
          "version": "v1"
        },
        {
          "definition": {
            "description": null,
            "graphql": {
              "typeName": "Integer"
            },
            "name": "Integer"
          },
          "kind": "ScalarType",
          "version": "v1"
        },
        {
          "definition": {
            "description": null,
            "graphql": {
              "typeName": "Keyword"
            },
            "name": "Keyword"
          },
          "kind": "ScalarType",
          "version": "v1"
        },
        {
          "definition": {
            "dataConnectorName": "elasticsearch",
            "dataConnectorScalarType": "_id",
            "graphql": {
              "comparisonExpressionTypeName": "IdComparisonExp"
            },
            "representation": "Id"
          },
          "kind": "DataConnectorScalarRepresentation",
          "version": "v1"
        },
        {
          "definition": {
            "dataConnectorName": "elasticsearch",
            "dataConnectorScalarType": "text",
            "graphql": {
              "comparisonExpressionTypeName": "TextComparisonExp"
            },
            "representation": "Text"
          },
          "kind": "DataConnectorScalarRepresentation",
          "version": "v1"
        },
        {
          "definition": {
            "dataConnectorName": "elasticsearch",
            "dataConnectorScalarType": "integer",
            "graphql": {
              "comparisonExpressionTypeName": "IntegerComparisonExp"
            },
            "representation": "Integer"
          },
          "kind": "DataConnectorScalarRepresentation",
          "version": "v1"
        },
        {
          "definition": {
            "dataConnectorName": "elasticsearch",
            "dataConnectorScalarType": "keyword",
            "graphql": {
              "comparisonExpressionTypeName": "KeywordComparisonExp"
            },
            "representation": "Keyword"
          },
          "kind": "DataConnectorScalarRepresentation",
          "version": "v1"
        },
        {
          "definition": {
            "description": null,
            "graphql": {
              "typeName": "Date"
            },
            "name": "Date"
          },
          "kind": "ScalarType",
          "version": "v1"
        },
        {
          "definition": {
            "description": null,
            "graphql": {
              "typeName": "Float1"
            },
            "name": "Float_1"
          },
          "kind": "ScalarType",
          "version": "v1"
        },
        {
          "definition": {
            "description": null,
            "graphql": {
              "typeName": "TextKeyword"
            },
            "name": "TextKeyword"
          },
          "kind": "ScalarType",
          "version": "v1"
        },
        {
          "definition": {
            "dataConnectorName": "elasticsearch",
            "dataConnectorScalarType": "date",
            "graphql": {
              "comparisonExpressionTypeName": "DateComparisonExp"
            },
            "representation": "Date"
          },
          "kind": "DataConnectorScalarRepresentation",
          "version": "v1"
        },
        {
          "definition": {
            "dataConnectorName": "elasticsearch",
            "dataConnectorScalarType": "float",
            "graphql": {
              "comparisonExpressionTypeName": "Float1ComparisonExp"
            },
            "representation": "Float_1"
          },
          "kind": "DataConnectorScalarRepresentation",
          "version": "v1"
        },
        {
          "definition": {
            "dataConnectorName": "elasticsearch",
            "dataConnectorScalarType": "text.keyword",
            "graphql": {
              "comparisonExpressionTypeName": "TextKeywordComparisonExp"
            },
            "representation": "TextKeyword"
          },
          "kind": "DataConnectorScalarRepresentation",
          "version": "v1"
        },
        {
          "definition": {
            "argumentPresets": [],
            "headers": {
              "Authorization": {
                "value": "Bearer lye5LM7IR5GVdkhk0GPTkQ=="
              }
            },
            "name": "elasticsearch",
            "responseHeaders": null,
            "schema": {
              "capabilities": {
                "capabilities": {
                  "mutation": {},
                  "query": {
                    "aggregates": {},
                    "exists": {},
                    "nested_fields": {
                      "aggregates": {},
                      "filter_by": {},
                      "order_by": {}
                    },
                    "variables": {}
                  }
                },
                "version": "0.1.4"
              },
              "schema": {
                "collections": [
                  {
                    "arguments": {},
                    "foreign_keys": {},
                    "name": "identification",
                    "type": "identification",
                    "uniqueness_constraints": {}
                  },
                  {
                    "arguments": {},
                    "foreign_keys": {},
                    "name": "my_book_index",
                    "type": "my_book_index",
                    "uniqueness_constraints": {}
                  }
                ],
                "functions": [],
                "object_types": {
                  "address": {
                    "fields": {
                      "city": {
                        "type": {
                          "name": "text",
                          "type": "named"
                        }
                      },
                      "zip": {
                        "type": {
                          "name": "integer",
                          "type": "named"
                        }
                      }
                    }
                  },
                  "identification": {
                    "fields": {
                      "_id": {
                        "type": {
                          "name": "_id",
                          "type": "named"
                        }
                      },
                      "address": {
                        "type": {
                          "element_type": {
                            "name": "address",
                            "type": "named"
                          },
                          "type": "array"
                        }
                      },
                      "age": {
                        "type": {
                          "name": "integer",
                          "type": "named"
                        }
                      },
                      "name": {
                        "type": {
                          "name": "keyword",
                          "type": "named"
                        }
                      }
                    }
                  },
                  "my_book_index": {
                    "fields": {
                      "_id": {
                        "type": {
                          "name": "_id",
                          "type": "named"
                        }
                      },
                      "author": {
                        "type": {
                          "name": "keyword",
                          "type": "named"
                        }
                      },
                      "description": {
                        "type": {
                          "name": "text",
                          "type": "named"
                        }
                      },
                      "genre": {
                        "type": {
                          "name": "keyword",
                          "type": "named"
                        }
                      },
                      "pages": {
                        "type": {
                          "name": "integer",
                          "type": "named"
                        }
                      },
                      "published_date": {
                        "type": {
                          "name": "date",
                          "type": "named"
                        }
                      },
                      "rating": {
                        "type": {
                          "name": "float",
                          "type": "named"
                        }
                      },
                      "title": {
                        "type": {
                          "name": "text.keyword",
                          "type": "named"
                        }
                      }
                    }
                  },
                  "range": {
                    "fields": {
                      "boost": {
                        "description": "(Optional, float) Floating point number used to decrease or increase the relevance scores of a query. Defaults to 1.0.",
                        "type": {
                          "name": "float",
                          "type": "named"
                        }
                      },
                      "gt": {
                        "description": "(Optional) Greater than.",
                        "type": {
                          "name": "double",
                          "type": "named"
                        }
                      },
                      "gte": {
                        "description": "(Optional) Greater than or equal.",
                        "type": {
                          "name": "double",
                          "type": "named"
                        }
                      },
                      "lt": {
                        "description": "(Optional) Less than.",
                        "type": {
                          "name": "double",
                          "type": "named"
                        }
                      },
                      "lte": {
                        "description": "(Optional) Less than or equal.",
                        "type": {
                          "name": "double",
                          "type": "named"
                        }
                      }
                    }
                  },
                  "stats": {
                    "fields": {
                      "avg": {
                        "type": {
                          "name": "double",
                          "type": "named"
                        }
                      },
                      "count": {
                        "type": {
                          "name": "integer",
                          "type": "named"
                        }
                      },
                      "max": {
                        "type": {
                          "name": "double",
                          "type": "named"
                        }
                      },
                      "min": {
                        "type": {
                          "name": "double",
                          "type": "named"
                        }
                      },
                      "sum": {
                        "type": {
                          "name": "double",
                          "type": "named"
                        }
                      }
                    }
                  },
                  "string_stats": {
                    "fields": {
                      "avg_length": {
                        "type": {
                          "name": "double",
                          "type": "named"
                        }
                      },
                      "count": {
                        "type": {
                          "name": "integer",
                          "type": "named"
                        }
                      },
                      "entropy": {
                        "type": {
                          "name": "double",
                          "type": "named"
                        }
                      },
                      "max_length": {
                        "type": {
                          "name": "integer",
                          "type": "named"
                        }
                      },
                      "min_length": {
                        "type": {
                          "name": "integer",
                          "type": "named"
                        }
                      }
                    }
                  }
                },
                "procedures": [],
                "scalar_types": {
                  "_id": {
                    "aggregate_functions": {},
                    "comparison_operators": {
                      "match": {
                        "argument_type": {
                          "name": "_id",
                          "type": "named"
                        },
                        "type": "custom"
                      },
                      "match_phrase": {
                        "argument_type": {
                          "name": "_id",
                          "type": "named"
                        },
                        "type": "custom"
                      },
                      "term": {
                        "type": "equal"
                      },
                      "terms": {
                        "argument_type": {
                          "element_type": {
                            "name": "_id",
                            "type": "named"
                          },
                          "type": "array"
                        },
                        "type": "custom"
                      }
                    },
                    "representation": {
                      "type": "string"
                    }
                  },
                  "date": {
                    "aggregate_functions": {
                      "avg": {
                        "result_type": {
                          "name": "long",
                          "type": "named"
                        }
                      },
                      "cardinality": {
                        "result_type": {
                          "name": "integer",
                          "type": "named"
                        }
                      },
                      "max": {
                        "result_type": {
                          "name": "long",
                          "type": "named"
                        }
                      },
                      "min": {
                        "result_type": {
                          "name": "long",
                          "type": "named"
                        }
                      },
                      "stats": {
                        "result_type": {
                          "name": "stats",
                          "type": "named"
                        }
                      },
                      "sum": {
                        "result_type": {
                          "name": "long",
                          "type": "named"
                        }
                      },
                      "value_count": {
                        "result_type": {
                          "name": "integer",
                          "type": "named"
                        }
                      }
                    },
                    "comparison_operators": {
                      "match": {
                        "argument_type": {
                          "name": "date",
                          "type": "named"
                        },
                        "type": "custom"
                      },
                      "match_phrase": {
                        "argument_type": {
                          "name": "date",
                          "type": "named"
                        },
                        "type": "custom"
                      },
                      "term": {
                        "type": "equal"
                      },
                      "terms": {
                        "argument_type": {
                          "element_type": {
                            "name": "date",
                            "type": "named"
                          },
                          "type": "array"
                        },
                        "type": "custom"
                      }
                    },
                    "representation": {
                      "type": "string"
                    }
                  },
                  "double": {
                    "aggregate_functions": {
                      "avg": {
                        "result_type": {
                          "name": "double",
                          "type": "named"
                        }
                      },
                      "cardinality": {
                        "result_type": {
                          "name": "integer",
                          "type": "named"
                        }
                      },
                      "max": {
                        "result_type": {
                          "name": "double",
                          "type": "named"
                        }
                      },
                      "min": {
                        "result_type": {
                          "name": "double",
                          "type": "named"
                        }
                      },
                      "stats": {
                        "result_type": {
                          "name": "stats",
                          "type": "named"
                        }
                      },
                      "sum": {
                        "result_type": {
                          "name": "double",
                          "type": "named"
                        }
                      },
                      "value_count": {
                        "result_type": {
                          "name": "integer",
                          "type": "named"
                        }
                      }
                    },
                    "comparison_operators": {
                      "match": {
                        "argument_type": {
                          "name": "double",
                          "type": "named"
                        },
                        "type": "custom"
                      },
                      "match_phrase": {
                        "argument_type": {
                          "name": "double",
                          "type": "named"
                        },
                        "type": "custom"
                      },
                      "term": {
                        "type": "equal"
                      },
                      "terms": {
                        "argument_type": {
                          "element_type": {
                            "name": "double",
                            "type": "named"
                          },
                          "type": "array"
                        },
                        "type": "custom"
                      }
                    },
                    "representation": {
                      "type": "number"
                    }
                  },
                  "float": {
                    "aggregate_functions": {
                      "avg": {
                        "result_type": {
                          "name": "float",
                          "type": "named"
                        }
                      },
                      "cardinality": {
                        "result_type": {
                          "name": "integer",
                          "type": "named"
                        }
                      },
                      "max": {
                        "result_type": {
                          "name": "float",
                          "type": "named"
                        }
                      },
                      "min": {
                        "result_type": {
                          "name": "float",
                          "type": "named"
                        }
                      },
                      "stats": {
                        "result_type": {
                          "name": "stats",
                          "type": "named"
                        }
                      },
                      "sum": {
                        "result_type": {
                          "name": "float",
                          "type": "named"
                        }
                      },
                      "value_count": {
                        "result_type": {
                          "name": "integer",
                          "type": "named"
                        }
                      }
                    },
                    "comparison_operators": {
                      "match": {
                        "argument_type": {
                          "name": "float",
                          "type": "named"
                        },
                        "type": "custom"
                      },
                      "match_phrase": {
                        "argument_type": {
                          "name": "float",
                          "type": "named"
                        },
                        "type": "custom"
                      },
                      "term": {
                        "type": "equal"
                      },
                      "terms": {
                        "argument_type": {
                          "element_type": {
                            "name": "float",
                            "type": "named"
                          },
                          "type": "array"
                        },
                        "type": "custom"
                      }
                    },
                    "representation": {
                      "type": "number"
                    }
                  },
                  "integer": {
                    "aggregate_functions": {
                      "avg": {
                        "result_type": {
                          "name": "integer",
                          "type": "named"
                        }
                      },
                      "cardinality": {
                        "result_type": {
                          "name": "integer",
                          "type": "named"
                        }
                      },
                      "max": {
                        "result_type": {
                          "name": "integer",
                          "type": "named"
                        }
                      },
                      "min": {
                        "result_type": {
                          "name": "integer",
                          "type": "named"
                        }
                      },
                      "stats": {
                        "result_type": {
                          "name": "stats",
                          "type": "named"
                        }
                      },
                      "sum": {
                        "result_type": {
                          "name": "integer",
                          "type": "named"
                        }
                      },
                      "value_count": {
                        "result_type": {
                          "name": "integer",
                          "type": "named"
                        }
                      }
                    },
                    "comparison_operators": {
                      "match": {
                        "argument_type": {
                          "name": "integer",
                          "type": "named"
                        },
                        "type": "custom"
                      },
                      "match_phrase": {
                        "argument_type": {
                          "name": "integer",
                          "type": "named"
                        },
                        "type": "custom"
                      },
                      "term": {
                        "type": "equal"
                      },
                      "terms": {
                        "argument_type": {
                          "element_type": {
                            "name": "integer",
                            "type": "named"
                          },
                          "type": "array"
                        },
                        "type": "custom"
                      }
                    },
                    "representation": {
                      "type": "integer"
                    }
                  },
                  "keyword": {
                    "aggregate_functions": {
                      "cardinality": {
                        "result_type": {
                          "name": "integer",
                          "type": "named"
                        }
                      },
                      "string_stats": {
                        "result_type": {
                          "name": "string_stats",
                          "type": "named"
                        }
                      },
                      "value_count": {
                        "result_type": {
                          "name": "integer",
                          "type": "named"
                        }
                      }
                    },
                    "comparison_operators": {
                      "match": {
                        "argument_type": {
                          "name": "keyword",
                          "type": "named"
                        },
                        "type": "custom"
                      },
                      "match_bool_prefix": {
                        "argument_type": {
                          "name": "keyword",
                          "type": "named"
                        },
                        "type": "custom"
                      },
                      "match_phrase": {
                        "argument_type": {
                          "name": "keyword",
                          "type": "named"
                        },
                        "type": "custom"
                      },
                      "prefix": {
                        "argument_type": {
                          "name": "keyword",
                          "type": "named"
                        },
                        "type": "custom"
                      },
                      "regexp": {
                        "argument_type": {
                          "name": "keyword",
                          "type": "named"
                        },
                        "type": "custom"
                      },
                      "term": {
                        "type": "equal"
                      },
                      "terms": {
                        "argument_type": {
                          "element_type": {
                            "name": "keyword",
                            "type": "named"
                          },
                          "type": "array"
                        },
                        "type": "custom"
                      },
                      "wildcard": {
                        "argument_type": {
                          "name": "keyword",
                          "type": "named"
                        },
                        "type": "custom"
                      }
                    },
                    "representation": {
                      "type": "string"
                    }
                  },
                  "text": {
                    "aggregate_functions": {},
                    "comparison_operators": {
                      "match": {
                        "argument_type": {
                          "name": "text",
                          "type": "named"
                        },
                        "type": "custom"
                      },
                      "match_bool_prefix": {
                        "argument_type": {
                          "name": "text",
                          "type": "named"
                        },
                        "type": "custom"
                      },
                      "match_phrase": {
                        "argument_type": {
                          "name": "text",
                          "type": "named"
                        },
                        "type": "custom"
                      },
                      "match_phrase_prefix": {
                        "argument_type": {
                          "name": "text",
                          "type": "named"
                        },
                        "type": "custom"
                      },
                      "prefix": {
                        "argument_type": {
                          "name": "text",
                          "type": "named"
                        },
                        "type": "custom"
                      },
                      "regexp": {
                        "argument_type": {
                          "name": "text",
                          "type": "named"
                        },
                        "type": "custom"
                      },
                      "term": {
                        "type": "equal"
                      },
                      "terms": {
                        "argument_type": {
                          "element_type": {
                            "name": "text",
                            "type": "named"
                          },
                          "type": "array"
                        },
                        "type": "custom"
                      },
                      "wildcard": {
                        "argument_type": {
                          "name": "text",
                          "type": "named"
                        },
                        "type": "custom"
                      }
                    },
                    "representation": {
                      "type": "string"
                    }
                  },
                  "text.keyword": {
                    "aggregate_functions": {
                      "cardinality": {
                        "result_type": {
                          "name": "integer",
                          "type": "named"
                        }
                      },
                      "string_stats": {
                        "result_type": {
                          "name": "string_stats",
                          "type": "named"
                        }
                      },
                      "value_count": {
                        "result_type": {
                          "name": "integer",
                          "type": "named"
                        }
                      }
                    },
                    "comparison_operators": {
                      "match": {
                        "argument_type": {
                          "name": "keyword",
                          "type": "named"
                        },
                        "type": "custom"
                      },
                      "match_bool_prefix": {
                        "argument_type": {
                          "name": "keyword",
                          "type": "named"
                        },
                        "type": "custom"
                      },
                      "match_phrase": {
                        "argument_type": {
                          "name": "keyword",
                          "type": "named"
                        },
                        "type": "custom"
                      },
                      "prefix": {
                        "argument_type": {
                          "name": "keyword",
                          "type": "named"
                        },
                        "type": "custom"
                      },
                      "regexp": {
                        "argument_type": {
                          "name": "keyword",
                          "type": "named"
                        },
                        "type": "custom"
                      },
                      "term": {
                        "type": "equal"
                      },
                      "terms": {
                        "argument_type": {
                          "element_type": {
                            "name": "keyword",
                            "type": "named"
                          },
                          "type": "array"
                        },
                        "type": "custom"
                      },
                      "wildcard": {
                        "argument_type": {
                          "name": "keyword",
                          "type": "named"
                        },
                        "type": "custom"
                      }
                    },
                    "representation": {
                      "type": "string"
                    }
                  }
                }
              },
              "version": "v0.1"
            },
            "url": {
              "readWriteUrls": {
                "read": {
                  "value": "http://local.hasura.dev:5328"
                },
                "write": {
                  "value": "http://local.hasura.dev:5328"
                }
              }
            }
          },
          "kind": "DataConnectorLink",
          "version": "v1"
        }
      ]
    }
  ],
  "version": "v2"
}
