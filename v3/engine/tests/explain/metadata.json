{
  "version": "v2",
  "supergraph": {
    "objects": []
  },
  "subgraphs": [
    {
      "name": "default",
      "objects": [
        {
          "kind": "DataConnector",
          "version": "v2",
          "definition": {
            "name": "default",
            "url": {
              "singleUrl": {
                "value": "http://fake.url"
              }
            },
            "schema": {
              "scalar_types": {
                "int4": {
                  "aggregate_functions": {
                    "bit_and": {
                      "result_type": {
                        "type": "named",
                        "name": "int4"
                      }
                    },
                    "bit_or": {
                      "result_type": {
                        "type": "named",
                        "name": "int4"
                      }
                    },
                    "bit_xor": {
                      "result_type": {
                        "type": "named",
                        "name": "int4"
                      }
                    },
                    "max": {
                      "result_type": {
                        "type": "named",
                        "name": "int4"
                      }
                    },
                    "min": {
                      "result_type": {
                        "type": "named",
                        "name": "int4"
                      }
                    }
                  },
                  "comparison_operators": {
                    "_eq": {
                      "argument_type": {
                        "type": "named",
                        "name": "int4"
                      }
                    },
                    "_gt": {
                      "argument_type": {
                        "type": "named",
                        "name": "int4"
                      }
                    },
                    "_gte": {
                      "argument_type": {
                        "type": "named",
                        "name": "int4"
                      }
                    },
                    "_lt": {
                      "argument_type": {
                        "type": "named",
                        "name": "int4"
                      }
                    },
                    "_lte": {
                      "argument_type": {
                        "type": "named",
                        "name": "int4"
                      }
                    },
                    "_neq": {
                      "argument_type": {
                        "type": "named",
                        "name": "int4"
                      }
                    }
                  }
                },
                "text": {
                  "aggregate_functions": {
                    "max": {
                      "result_type": {
                        "type": "named",
                        "name": "text"
                      }
                    },
                    "min": {
                      "result_type": {
                        "type": "named",
                        "name": "text"
                      }
                    }
                  },
                  "comparison_operators": {
                    "_eq": {
                      "argument_type": {
                        "type": "named",
                        "name": "text"
                      }
                    },
                    "_gt": {
                      "argument_type": {
                        "type": "named",
                        "name": "text"
                      }
                    },
                    "_gte": {
                      "argument_type": {
                        "type": "named",
                        "name": "text"
                      }
                    },
                    "_ilike": {
                      "argument_type": {
                        "type": "named",
                        "name": "text"
                      }
                    },
                    "_iregex": {
                      "argument_type": {
                        "type": "named",
                        "name": "text"
                      }
                    },
                    "_like": {
                      "argument_type": {
                        "type": "named",
                        "name": "text"
                      }
                    },
                    "_lt": {
                      "argument_type": {
                        "type": "named",
                        "name": "text"
                      }
                    },
                    "_lte": {
                      "argument_type": {
                        "type": "named",
                        "name": "text"
                      }
                    },
                    "_neq": {
                      "argument_type": {
                        "type": "named",
                        "name": "text"
                      }
                    },
                    "_nilike": {
                      "argument_type": {
                        "type": "named",
                        "name": "text"
                      }
                    },
                    "_niregex": {
                      "argument_type": {
                        "type": "named",
                        "name": "text"
                      }
                    },
                    "_nlike": {
                      "argument_type": {
                        "type": "named",
                        "name": "text"
                      }
                    },
                    "_nregex": {
                      "argument_type": {
                        "type": "named",
                        "name": "text"
                      }
                    },
                    "_regex": {
                      "argument_type": {
                        "type": "named",
                        "name": "text"
                      }
                    }
                  }
                },
                "uuid": {
                  "aggregate_functions": {},
                  "comparison_operators": {
                    "_eq": {
                      "argument_type": {
                        "type": "named",
                        "name": "uuid"
                      }
                    },
                    "_gt": {
                      "argument_type": {
                        "type": "named",
                        "name": "uuid"
                      }
                    },
                    "_gte": {
                      "argument_type": {
                        "type": "named",
                        "name": "uuid"
                      }
                    },
                    "_lt": {
                      "argument_type": {
                        "type": "named",
                        "name": "uuid"
                      }
                    },
                    "_lte": {
                      "argument_type": {
                        "type": "named",
                        "name": "uuid"
                      }
                    },
                    "_neq": {
                      "argument_type": {
                        "type": "named",
                        "name": "uuid"
                      }
                    }
                  }
                }
              },
              "object_types": {
                "city": {
                  "fields": {
                    "code": {
                      "type": {
                        "type": "named",
                        "name": "int4"
                      }
                    },
                    "name": {
                      "type": {
                        "type": "named",
                        "name": "text"
                      }
                    },
                    "state_code": {
                      "type": {
                        "type": "nullable",
                        "underlying_type": {
                          "type": "named",
                          "name": "int4"
                        }
                      }
                    }
                  }
                },
                "country": {
                  "fields": {
                    "code": {
                      "type": {
                        "type": "named",
                        "name": "int4"
                      }
                    },
                    "name": {
                      "type": {
                        "type": "nullable",
                        "underlying_type": {
                          "type": "named",
                          "name": "text"
                        }
                      }
                    }
                  }
                },
                "states": {
                  "fields": {
                    "code": {
                      "type": {
                        "type": "named",
                        "name": "int4"
                      }
                    },
                    "name": {
                      "type": {
                        "type": "named",
                        "name": "text"
                      }
                    }
                  }
                }
              },
              "collections": [
                {
                  "name": "city",
                  "arguments": {},
                  "type": "city",
                  "uniqueness_constraints": {
                    "city_pkey": {
                      "unique_columns": [
                        "code"
                      ]
                    }
                  },
                  "foreign_keys": {
                    "city_state_code_fkey": {
                      "column_mapping": {
                        "state_code": "code"
                      },
                      "foreign_collection": "states"
                    }
                  }
                },
                {
                  "name": "country",
                  "arguments": {},
                  "type": "country",
                  "uniqueness_constraints": {
                    "country_pkey": {
                      "unique_columns": [
                        "code"
                      ]
                    }
                  },
                  "foreign_keys": {}
                },
                {
                  "name": "states",
                  "arguments": {},
                  "type": "states",
                  "uniqueness_constraints": {
                    "states_pkey": {
                      "unique_columns": [
                        "code"
                      ]
                    }
                  },
                  "foreign_keys": {}
                }
              ],
              "functions": [],
              "procedures": []
            },
            "capabilities": {
              "versions": "^0.1.0",
              "capabilities": {
                "query": {
                  "aggregates": {},
                  "variables": {}
                },
                "explain": {},
                "relationships": {
                  "relation_comparisons": {},
                  "order_by_aggregate": {}
                }
              }
            }
          }
        },
        {
          "kind": "ScalarType",
          "version": "v1",
          "definition": {
            "name": "default_int4",
            "graphql": {
              "typeName": "default_int4"
            }
          }
        },
        {
          "kind": "DataConnectorScalarRepresentation",
          "version": "v1",
          "definition": {
            "dataConnectorName": "default",
            "dataConnectorScalarType": "int4",
            "representation": "default_int4",
            "graphql": {
              "comparisonExpressionTypeName": "default_int4_comparison"
            }
          }
        },
        {
          "kind": "ScalarType",
          "version": "v1",
          "definition": {
            "name": "default_text",
            "graphql": {
              "typeName": "default_text"
            }
          }
        },
        {
          "kind": "DataConnectorScalarRepresentation",
          "version": "v1",
          "definition": {
            "dataConnectorName": "default",
            "dataConnectorScalarType": "text",
            "representation": "default_text",
            "graphql": {
              "comparisonExpressionTypeName": "default_text_comparison"
            }
          }
        },
        {
          "kind": "ScalarType",
          "version": "v1",
          "definition": {
            "name": "default_uuid",
            "graphql": {
              "typeName": "default_uuid"
            }
          }
        },
        {
          "kind": "DataConnectorScalarRepresentation",
          "version": "v1",
          "definition": {
            "dataConnectorName": "default",
            "dataConnectorScalarType": "uuid",
            "representation": "default_uuid",
            "graphql": {
              "comparisonExpressionTypeName": "default_uuid_comparison"
            }
          }
        },
        {
          "kind": "DataConnector",
          "version": "v2",
          "definition": {
            "name": "remote",
            "url": {
              "singleUrl": {
                "value": "http://fake.url"
              }
            },
            "schema": {
              "scalar_types": {
                "int4": {
                  "aggregate_functions": {
                    "bit_and": {
                      "result_type": {
                        "type": "named",
                        "name": "int4"
                      }
                    },
                    "bit_or": {
                      "result_type": {
                        "type": "named",
                        "name": "int4"
                      }
                    },
                    "bit_xor": {
                      "result_type": {
                        "type": "named",
                        "name": "int4"
                      }
                    },
                    "max": {
                      "result_type": {
                        "type": "named",
                        "name": "int4"
                      }
                    },
                    "min": {
                      "result_type": {
                        "type": "named",
                        "name": "int4"
                      }
                    }
                  },
                  "comparison_operators": {
                    "_eq": {
                      "argument_type": {
                        "type": "named",
                        "name": "int4"
                      }
                    },
                    "_gt": {
                      "argument_type": {
                        "type": "named",
                        "name": "int4"
                      }
                    },
                    "_gte": {
                      "argument_type": {
                        "type": "named",
                        "name": "int4"
                      }
                    },
                    "_lt": {
                      "argument_type": {
                        "type": "named",
                        "name": "int4"
                      }
                    },
                    "_lte": {
                      "argument_type": {
                        "type": "named",
                        "name": "int4"
                      }
                    },
                    "_neq": {
                      "argument_type": {
                        "type": "named",
                        "name": "int4"
                      }
                    }
                  }
                },
                "text": {
                  "aggregate_functions": {
                    "max": {
                      "result_type": {
                        "type": "named",
                        "name": "text"
                      }
                    },
                    "min": {
                      "result_type": {
                        "type": "named",
                        "name": "text"
                      }
                    }
                  },
                  "comparison_operators": {
                    "_eq": {
                      "argument_type": {
                        "type": "named",
                        "name": "text"
                      }
                    },
                    "_gt": {
                      "argument_type": {
                        "type": "named",
                        "name": "text"
                      }
                    },
                    "_gte": {
                      "argument_type": {
                        "type": "named",
                        "name": "text"
                      }
                    },
                    "_ilike": {
                      "argument_type": {
                        "type": "named",
                        "name": "text"
                      }
                    },
                    "_iregex": {
                      "argument_type": {
                        "type": "named",
                        "name": "text"
                      }
                    },
                    "_like": {
                      "argument_type": {
                        "type": "named",
                        "name": "text"
                      }
                    },
                    "_lt": {
                      "argument_type": {
                        "type": "named",
                        "name": "text"
                      }
                    },
                    "_lte": {
                      "argument_type": {
                        "type": "named",
                        "name": "text"
                      }
                    },
                    "_neq": {
                      "argument_type": {
                        "type": "named",
                        "name": "text"
                      }
                    },
                    "_nilike": {
                      "argument_type": {
                        "type": "named",
                        "name": "text"
                      }
                    },
                    "_niregex": {
                      "argument_type": {
                        "type": "named",
                        "name": "text"
                      }
                    },
                    "_nlike": {
                      "argument_type": {
                        "type": "named",
                        "name": "text"
                      }
                    },
                    "_nregex": {
                      "argument_type": {
                        "type": "named",
                        "name": "text"
                      }
                    },
                    "_regex": {
                      "argument_type": {
                        "type": "named",
                        "name": "text"
                      }
                    }
                  }
                },
                "uuid": {
                  "aggregate_functions": {},
                  "comparison_operators": {
                    "_eq": {
                      "argument_type": {
                        "type": "named",
                        "name": "uuid"
                      }
                    },
                    "_gt": {
                      "argument_type": {
                        "type": "named",
                        "name": "uuid"
                      }
                    },
                    "_gte": {
                      "argument_type": {
                        "type": "named",
                        "name": "uuid"
                      }
                    },
                    "_lt": {
                      "argument_type": {
                        "type": "named",
                        "name": "uuid"
                      }
                    },
                    "_lte": {
                      "argument_type": {
                        "type": "named",
                        "name": "uuid"
                      }
                    },
                    "_neq": {
                      "argument_type": {
                        "type": "named",
                        "name": "uuid"
                      }
                    }
                  }
                }
              },
              "object_types": {
                "census": {
                  "fields": {
                    "city_code": {
                      "type": {
                        "type": "named",
                        "name": "int4"
                      }
                    },
                    "data": {
                      "type": {
                        "type": "named",
                        "name": "uuid"
                      }
                    }
                  }
                },
                "weather": {
                  "fields": {
                    "code": {
                      "type": {
                        "type": "named",
                        "name": "int4"
                      }
                    },
                    "forecast": {
                      "type": {
                        "type": "named",
                        "name": "text"
                      }
                    }
                  }
                }
              },
              "collections": [
                {
                  "name": "census",
                  "arguments": {},
                  "type": "census",
                  "uniqueness_constraints": {
                    "census_pkey": {
                      "unique_columns": [
                        "city_code"
                      ]
                    }
                  },
                  "foreign_keys": {}
                },
                {
                  "name": "weather",
                  "arguments": {},
                  "type": "weather",
                  "uniqueness_constraints": {
                    "weather_pkey": {
                      "unique_columns": [
                        "code"
                      ]
                    }
                  },
                  "foreign_keys": {}
                }
              ],
              "functions": [],
              "procedures": []
            },
            "capabilities": {
              "versions": "^0.1.0",
              "capabilities": {
                "query": {
                  "aggregates": {},
                  "variables": {}
                },
                "explain": {},
                "relationships": {
                  "relation_comparisons": {},
                  "order_by_aggregate": {}
                }
              }
            }
          }
        },
        {
          "kind": "ScalarType",
          "version": "v1",
          "definition": {
            "name": "remote_int4",
            "graphql": {
              "typeName": "remote_int4"
            }
          }
        },
        {
          "kind": "DataConnectorScalarRepresentation",
          "version": "v1",
          "definition": {
            "dataConnectorName": "remote",
            "dataConnectorScalarType": "int4",
            "representation": "remote_int4",
            "graphql": {
              "comparisonExpressionTypeName": "remote_int4_comparison"
            }
          }
        },
        {
          "kind": "ScalarType",
          "version": "v1",
          "definition": {
            "name": "remote_text",
            "graphql": {
              "typeName": "remote_text"
            }
          }
        },
        {
          "kind": "DataConnectorScalarRepresentation",
          "version": "v1",
          "definition": {
            "dataConnectorName": "remote",
            "dataConnectorScalarType": "text",
            "representation": "remote_text",
            "graphql": {
              "comparisonExpressionTypeName": "remote_text_comparison"
            }
          }
        },
        {
          "kind": "ScalarType",
          "version": "v1",
          "definition": {
            "name": "remote_uuid",
            "graphql": {
              "typeName": "remote_uuid"
            }
          }
        },
        {
          "kind": "DataConnectorScalarRepresentation",
          "version": "v1",
          "definition": {
            "dataConnectorName": "remote",
            "dataConnectorScalarType": "uuid",
            "representation": "remote_uuid",
            "graphql": {
              "comparisonExpressionTypeName": "remote_uuid_comparison"
            }
          }
        },
        {
          "kind": "ObjectType",
          "version": "v1",
          "definition": {
            "name": "city",
            "fields": [
              {
                "name": "code",
                "type": "default_int4!"
              },
              {
                "name": "name",
                "type": "default_text!"
              },
              {
                "name": "state_code",
                "type": "default_int4"
              }
            ],
            "globalIdFields": null,
            "graphql": {
              "typeName": "city",
              "inputTypeName": null
            }
          }
        },
        {
          "kind": "TypePermissions",
          "version": "v1",
          "definition": {
            "typeName": "city",
            "permissions": [
              {
                "role": "admin",
                "output": {
                  "allowedFields": [
                    "code",
                    "name",
                    "state_code"
                  ]
                }
              }
            ]
          }
        },
        {
          "kind": "Model",
          "version": "v1",
          "definition": {
            "name": "city",
            "objectType": "city",
            "globalIdSource": false,
            "arguments": [],
            "source": {
              "dataConnectorName": "default",
              "collection": "city",
              "typeMapping": {
                "city": {
                  "fieldMapping": {
                    "state_code": {
                      "column": "state_code"
                    },
                    "code": {
                      "column": "code"
                    },
                    "name": {
                      "column": "name"
                    }
                  }
                }
              },
              "argumentMapping": {}
            },
            "filterableFields": [
              {
                "fieldName": "code",
                "operators": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "name",
                "operators": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "state_code",
                "operators": {
                  "enableAll": true
                }
              }
            ],
            "orderableFields": [
              {
                "fieldName": "code",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "name",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "state_code",
                "orderByDirections": {
                  "enableAll": true
                }
              }
            ],
            "graphql": {
              "selectUniques": [
                {
                  "queryRootField": "city_by_code",
                  "uniqueIdentifier": [
                    "code"
                  ]
                }
              ],
              "selectMany": {
                "queryRootField": "cities"
              },
              "argumentsInputType": null,
              "filterExpressionType": "city_bool_exp",
              "orderByExpressionType": "city_order_by"
            }
          }
        },
        {
          "kind": "ModelPermissions",
          "version": "v1",
          "definition": {
            "modelName": "city",
            "permissions": [
              {
                "role": "admin",
                "select": {
                  "filter": null
                }
              }
            ]
          }
        },
        {
          "kind": "ObjectType",
          "version": "v1",
          "definition": {
            "name": "country",
            "fields": [
              {
                "name": "code",
                "type": "default_int4!"
              },
              {
                "name": "name",
                "type": "default_text"
              }
            ],
            "globalIdFields": null,
            "graphql": {
              "typeName": "country",
              "inputTypeName": null
            }
          }
        },
        {
          "kind": "TypePermissions",
          "version": "v1",
          "definition": {
            "typeName": "country",
            "permissions": [
              {
                "role": "admin",
                "output": {
                  "allowedFields": [
                    "name",
                    "code"
                  ]
                }
              }
            ]
          }
        },
        {
          "kind": "Model",
          "version": "v1",
          "definition": {
            "name": "country",
            "objectType": "country",
            "globalIdSource": false,
            "arguments": [],
            "source": {
              "dataConnectorName": "default",
              "collection": "country",
              "typeMapping": {
                "country": {
                  "fieldMapping": {
                    "name": {
                      "column": "name"
                    },
                    "code": {
                      "column": "code"
                    }
                  }
                }
              },
              "argumentMapping": {}
            },
            "filterableFields": [
              {
                "fieldName": "code",
                "operators": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "name",
                "operators": {
                  "enableAll": true
                }
              }
            ],
            "orderableFields": [
              {
                "fieldName": "code",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "name",
                "orderByDirections": {
                  "enableAll": true
                }
              }
            ],
            "graphql": {
              "selectUniques": [
                {
                  "queryRootField": "country_by_code",
                  "uniqueIdentifier": [
                    "code"
                  ]
                }
              ],
              "selectMany": {
                "queryRootField": "countries"
              },
              "argumentsInputType": null,
              "filterExpressionType": "country_bool_exp",
              "orderByExpressionType": "country_order_by"
            }
          }
        },
        {
          "kind": "ModelPermissions",
          "version": "v1",
          "definition": {
            "modelName": "country",
            "permissions": [
              {
                "role": "admin",
                "select": {
                  "filter": null
                }
              }
            ]
          }
        },
        {
          "kind": "ObjectType",
          "version": "v1",
          "definition": {
            "name": "states",
            "fields": [
              {
                "name": "code",
                "type": "default_int4!"
              },
              {
                "name": "name",
                "type": "default_text!"
              }
            ],
            "globalIdFields": null,
            "graphql": {
              "typeName": "states",
              "inputTypeName": null
            }
          }
        },
        {
          "kind": "TypePermissions",
          "version": "v1",
          "definition": {
            "typeName": "states",
            "permissions": [
              {
                "role": "admin",
                "output": {
                  "allowedFields": [
                    "code",
                    "name"
                  ]
                }
              }
            ]
          }
        },
        {
          "kind": "Model",
          "version": "v1",
          "definition": {
            "name": "states",
            "objectType": "states",
            "globalIdSource": false,
            "arguments": [],
            "source": {
              "dataConnectorName": "default",
              "collection": "states",
              "typeMapping": {
                "states": {
                  "fieldMapping": {
                    "code": {
                      "column": "code"
                    },
                    "name": {
                      "column": "name"
                    }
                  }
                }
              },
              "argumentMapping": {}
            },
            "filterableFields": [
              {
                "fieldName": "code",
                "operators": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "name",
                "operators": {
                  "enableAll": true
                }
              }
            ],
            "orderableFields": [
              {
                "fieldName": "code",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "name",
                "orderByDirections": {
                  "enableAll": true
                }
              }
            ],
            "graphql": {
              "selectUniques": [
                {
                  "queryRootField": "states_by_code",
                  "uniqueIdentifier": [
                    "code"
                  ]
                }
              ],
              "selectMany": {
                "queryRootField": "states"
              },
              "argumentsInputType": null,
              "filterExpressionType": "states_bool_exp",
              "orderByExpressionType": "states_order_by"
            }
          }
        },
        {
          "kind": "ModelPermissions",
          "version": "v1",
          "definition": {
            "modelName": "states",
            "permissions": [
              {
                "role": "admin",
                "select": {
                  "filter": null
                }
              }
            ]
          }
        },
        {
          "kind": "ObjectType",
          "version": "v1",
          "definition": {
            "name": "census",
            "fields": [
              {
                "name": "city_code",
                "type": "remote_int4!"
              },
              {
                "name": "data",
                "type": "remote_uuid!"
              }
            ],
            "globalIdFields": [
              "city_code"
            ],
            "graphql": {
              "typeName": "census",
              "inputTypeName": null
            }
          }
        },
        {
          "kind": "TypePermissions",
          "version": "v1",
          "definition": {
            "typeName": "census",
            "permissions": [
              {
                "role": "admin",
                "output": {
                  "allowedFields": [
                    "city_code",
                    "data"
                  ]
                }
              }
            ]
          }
        },
        {
          "kind": "Model",
          "version": "v1",
          "definition": {
            "name": "census",
            "objectType": "census",
            "globalIdSource": true,
            "arguments": [],
            "source": {
              "dataConnectorName": "remote",
              "collection": "census",
              "typeMapping": {
                "census": {
                  "fieldMapping": {
                    "city_code": {
                      "column": "city_code"
                    },
                    "data": {
                      "column": "data"
                    }
                  }
                }
              },
              "argumentMapping": {}
            },
            "filterableFields": [
              {
                "fieldName": "city_code",
                "operators": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "data",
                "operators": {
                  "enableAll": true
                }
              }
            ],
            "orderableFields": [
              {
                "fieldName": "city_code",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "data",
                "orderByDirections": {
                  "enableAll": true
                }
              }
            ],
            "graphql": {
              "selectUniques": [
                {
                  "queryRootField": "census_by_city_code",
                  "uniqueIdentifier": [
                    "city_code"
                  ]
                }
              ],
              "selectMany": {
                "queryRootField": "census"
              },
              "argumentsInputType": null,
              "filterExpressionType": "census_bool_exp",
              "orderByExpressionType": "census_order_by"
            }
          }
        },
        {
          "kind": "ModelPermissions",
          "version": "v1",
          "definition": {
            "modelName": "census",
            "permissions": [
              {
                "role": "admin",
                "select": {
                  "filter": null
                }
              }
            ]
          }
        },
        {
          "kind": "ObjectType",
          "version": "v1",
          "definition": {
            "name": "weather",
            "fields": [
              {
                "name": "code",
                "type": "remote_int4!"
              },
              {
                "name": "forecast",
                "type": "remote_text!"
              }
            ],
            "globalIdFields": null,
            "graphql": {
              "typeName": "weather",
              "inputTypeName": null
            }
          }
        },
        {
          "kind": "TypePermissions",
          "version": "v1",
          "definition": {
            "typeName": "weather",
            "permissions": [
              {
                "role": "admin",
                "output": {
                  "allowedFields": [
                    "forecast",
                    "code"
                  ]
                }
              }
            ]
          }
        },
        {
          "kind": "Model",
          "version": "v1",
          "definition": {
            "name": "weather",
            "objectType": "weather",
            "globalIdSource": false,
            "arguments": [],
            "source": {
              "dataConnectorName": "remote",
              "collection": "weather",
              "typeMapping": {
                "weather": {
                  "fieldMapping": {
                    "code": {
                      "column": "code"
                    },
                    "forecast": {
                      "column": "forecast"
                    }
                  }
                }
              },
              "argumentMapping": {}
            },
            "filterableFields": [
              {
                "fieldName": "code",
                "operators": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "forecast",
                "operators": {
                  "enableAll": true
                }
              }
            ],
            "orderableFields": [
              {
                "fieldName": "code",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "forecast",
                "orderByDirections": {
                  "enableAll": true
                }
              }
            ],
            "graphql": {
              "selectUniques": [
                {
                  "queryRootField": "weather_by_code",
                  "uniqueIdentifier": [
                    "code"
                  ]
                }
              ],
              "selectMany": {
                "queryRootField": "weathers"
              },
              "argumentsInputType": null,
              "filterExpressionType": "weather_bool_exp",
              "orderByExpressionType": "weather_order_by"
            }
          }
        },
        {
          "kind": "ModelPermissions",
          "version": "v1",
          "definition": {
            "modelName": "weather",
            "permissions": [
              {
                "role": "admin",
                "select": {
                  "filter": null
                }
              }
            ]
          }
        },
        {
          "kind": "Relationship",
          "version": "v1",
          "definition": {
            "name": "state",
            "source": "city",
            "target": {
              "model": {
                "name": "states",
                "namespace": null,
                "subgraph": null,
                "relationshipType": "Object"
              }
            },
            "mapping": [
              {
                "source": {
                  "fieldPath": [
                    {
                      "fieldName": "state_code"
                    }
                  ]
                },
                "target": {
                  "modelField": [
                    {
                      "fieldName": "code"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "kind": "Relationship",
          "version": "v1",
          "definition": {
            "name": "weather",
            "source": "city",
            "target": {
              "model": {
                "name": "weather",
                "namespace": null,
                "subgraph": null,
                "relationshipType": "Object"
              }
            },
            "mapping": [
              {
                "source": {
                  "fieldPath": [
                    {
                      "fieldName": "code"
                    }
                  ]
                },
                "target": {
                  "modelField": [
                    {
                      "fieldName": "code"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "kind": "Relationship",
          "version": "v1",
          "definition": {
            "name": "census",
            "source": "city",
            "target": {
              "model": {
                "name": "census",
                "namespace": null,
                "subgraph": null,
                "relationshipType": "Object"
              }
            },
            "mapping": [
              {
                "source": {
                  "fieldPath": [
                    {
                      "fieldName": "code"
                    }
                  ]
                },
                "target": {
                  "modelField": [
                    {
                      "fieldName": "city_code"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "kind": "Relationship",
          "version": "v1",
          "definition": {
            "name": "weather",
            "source": "states",
            "target": {
              "model": {
                "name": "weather",
                "namespace": null,
                "subgraph": null,
                "relationshipType": "Object"
              }
            },
            "mapping": [
              {
                "source": {
                  "fieldPath": [
                    {
                      "fieldName": "code"
                    }
                  ]
                },
                "target": {
                  "modelField": [
                    {
                      "fieldName": "code"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "kind": "DataConnector",
          "version": "v2",
          "definition": {
            "name": "remote_2",
            "url": {
              "singleUrl": {
                "value": "http://fake.url"
              }
            },
            "schema": {
              "scalar_types": {
                "int4": {
                  "aggregate_functions": {
                    "bit_and": {
                      "result_type": {
                        "type": "named",
                        "name": "int4"
                      }
                    },
                    "bit_or": {
                      "result_type": {
                        "type": "named",
                        "name": "int4"
                      }
                    },
                    "bit_xor": {
                      "result_type": {
                        "type": "named",
                        "name": "int4"
                      }
                    },
                    "max": {
                      "result_type": {
                        "type": "named",
                        "name": "int4"
                      }
                    },
                    "min": {
                      "result_type": {
                        "type": "named",
                        "name": "int4"
                      }
                    }
                  },
                  "comparison_operators": {
                    "_eq": {
                      "argument_type": {
                        "type": "named",
                        "name": "int4"
                      }
                    },
                    "_gt": {
                      "argument_type": {
                        "type": "named",
                        "name": "int4"
                      }
                    },
                    "_gte": {
                      "argument_type": {
                        "type": "named",
                        "name": "int4"
                      }
                    },
                    "_lt": {
                      "argument_type": {
                        "type": "named",
                        "name": "int4"
                      }
                    },
                    "_lte": {
                      "argument_type": {
                        "type": "named",
                        "name": "int4"
                      }
                    },
                    "_neq": {
                      "argument_type": {
                        "type": "named",
                        "name": "int4"
                      }
                    }
                  }
                },
                "text": {
                  "aggregate_functions": {
                    "max": {
                      "result_type": {
                        "type": "named",
                        "name": "text"
                      }
                    },
                    "min": {
                      "result_type": {
                        "type": "named",
                        "name": "text"
                      }
                    }
                  },
                  "comparison_operators": {
                    "_eq": {
                      "argument_type": {
                        "type": "named",
                        "name": "text"
                      }
                    },
                    "_gt": {
                      "argument_type": {
                        "type": "named",
                        "name": "text"
                      }
                    },
                    "_gte": {
                      "argument_type": {
                        "type": "named",
                        "name": "text"
                      }
                    },
                    "_ilike": {
                      "argument_type": {
                        "type": "named",
                        "name": "text"
                      }
                    },
                    "_iregex": {
                      "argument_type": {
                        "type": "named",
                        "name": "text"
                      }
                    },
                    "_like": {
                      "argument_type": {
                        "type": "named",
                        "name": "text"
                      }
                    },
                    "_lt": {
                      "argument_type": {
                        "type": "named",
                        "name": "text"
                      }
                    },
                    "_lte": {
                      "argument_type": {
                        "type": "named",
                        "name": "text"
                      }
                    },
                    "_neq": {
                      "argument_type": {
                        "type": "named",
                        "name": "text"
                      }
                    },
                    "_nilike": {
                      "argument_type": {
                        "type": "named",
                        "name": "text"
                      }
                    },
                    "_niregex": {
                      "argument_type": {
                        "type": "named",
                        "name": "text"
                      }
                    },
                    "_nlike": {
                      "argument_type": {
                        "type": "named",
                        "name": "text"
                      }
                    },
                    "_nregex": {
                      "argument_type": {
                        "type": "named",
                        "name": "text"
                      }
                    },
                    "_regex": {
                      "argument_type": {
                        "type": "named",
                        "name": "text"
                      }
                    }
                  }
                },
                "uuid": {
                  "aggregate_functions": {},
                  "comparison_operators": {
                    "_eq": {
                      "argument_type": {
                        "type": "named",
                        "name": "uuid"
                      }
                    },
                    "_gt": {
                      "argument_type": {
                        "type": "named",
                        "name": "uuid"
                      }
                    },
                    "_gte": {
                      "argument_type": {
                        "type": "named",
                        "name": "uuid"
                      }
                    },
                    "_lt": {
                      "argument_type": {
                        "type": "named",
                        "name": "uuid"
                      }
                    },
                    "_lte": {
                      "argument_type": {
                        "type": "named",
                        "name": "uuid"
                      }
                    },
                    "_neq": {
                      "argument_type": {
                        "type": "named",
                        "name": "uuid"
                      }
                    }
                  }
                }
              },
              "object_types": {
                "departments": {
                  "fields": {
                    "city_code": {
                      "type": {
                        "type": "named",
                        "name": "int4"
                      }
                    },
                    "id": {
                      "type": {
                        "type": "named",
                        "name": "int4"
                      }
                    },
                    "name": {
                      "type": {
                        "type": "named",
                        "name": "text"
                      }
                    }
                  }
                }
              },
              "collections": [
                {
                  "name": "departments",
                  "arguments": {},
                  "type": "departments",
                  "uniqueness_constraints": {
                    "departments_pkey": {
                      "unique_columns": [
                        "id"
                      ]
                    }
                  },
                  "foreign_keys": {}
                }
              ],
              "functions": [],
              "procedures": []
            },
            "capabilities": {
              "versions": "^0.1.0",
              "capabilities": {
                "query": {
                  "aggregates": {},
                  "variables": {}
                },
                "explain": {},
                "relationships": {
                  "relation_comparisons": {},
                  "order_by_aggregate": {}
                }
              }
            }
          }
        },
        {
          "kind": "ScalarType",
          "version": "v1",
          "definition": {
            "name": "remote_2_int4",
            "graphql": {
              "typeName": "remote_2_int4"
            }
          }
        },
        {
          "kind": "DataConnectorScalarRepresentation",
          "version": "v1",
          "definition": {
            "dataConnectorName": "remote_2",
            "dataConnectorScalarType": "int4",
            "representation": "remote_2_int4",
            "graphql": {
              "comparisonExpressionTypeName": "remote_2_int4_comparison"
            }
          }
        },
        {
          "kind": "ScalarType",
          "version": "v1",
          "definition": {
            "name": "remote_2_text",
            "graphql": {
              "typeName": "remote_2_text"
            }
          }
        },
        {
          "kind": "DataConnectorScalarRepresentation",
          "version": "v1",
          "definition": {
            "dataConnectorName": "remote_2",
            "dataConnectorScalarType": "text",
            "representation": "remote_2_text",
            "graphql": {
              "comparisonExpressionTypeName": "remote_2_text_comparison"
            }
          }
        },
        {
          "kind": "ScalarType",
          "version": "v1",
          "definition": {
            "name": "remote_2_uuid",
            "graphql": {
              "typeName": "remote_2_uuid"
            }
          }
        },
        {
          "kind": "DataConnectorScalarRepresentation",
          "version": "v1",
          "definition": {
            "dataConnectorName": "remote_2",
            "dataConnectorScalarType": "uuid",
            "representation": "remote_2_uuid",
            "graphql": {
              "comparisonExpressionTypeName": "remote_2_uuid_comparison"
            }
          }
        },
        {
          "kind": "ObjectType",
          "version": "v1",
          "definition": {
            "name": "departments",
            "fields": [
              {
                "name": "city_code",
                "type": "remote_2_int4!"
              },
              {
                "name": "id",
                "type": "remote_2_int4!"
              },
              {
                "name": "name",
                "type": "remote_2_text!"
              }
            ],
            "globalIdFields": null,
            "graphql": {
              "typeName": "departments",
              "inputTypeName": null
            }
          }
        },
        {
          "kind": "TypePermissions",
          "version": "v1",
          "definition": {
            "typeName": "departments",
            "permissions": [
              {
                "role": "admin",
                "output": {
                  "allowedFields": [
                    "id",
                    "name",
                    "city_code"
                  ]
                }
              }
            ]
          }
        },
        {
          "kind": "Model",
          "version": "v1",
          "definition": {
            "name": "departments",
            "objectType": "departments",
            "globalIdSource": false,
            "arguments": [],
            "source": {
              "dataConnectorName": "remote_2",
              "collection": "departments",
              "typeMapping": {
                "departments": {
                  "fieldMapping": {
                    "name": {
                      "column": "name"
                    },
                    "id": {
                      "column": "id"
                    },
                    "city_code": {
                      "column": "city_code"
                    }
                  }
                }
              },
              "argumentMapping": {}
            },
            "filterableFields": [
              {
                "fieldName": "city_code",
                "operators": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "id",
                "operators": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "name",
                "operators": {
                  "enableAll": true
                }
              }
            ],
            "orderableFields": [
              {
                "fieldName": "city_code",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "id",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "name",
                "orderByDirections": {
                  "enableAll": true
                }
              }
            ],
            "graphql": {
              "selectUniques": [
                {
                  "queryRootField": "departments_by_id",
                  "uniqueIdentifier": [
                    "id"
                  ]
                }
              ],
              "selectMany": {
                "queryRootField": "departments"
              },
              "argumentsInputType": null,
              "filterExpressionType": "departments_bool_exp",
              "orderByExpressionType": "departments_order_by"
            }
          }
        },
        {
          "kind": "ModelPermissions",
          "version": "v1",
          "definition": {
            "modelName": "departments",
            "permissions": [
              {
                "role": "admin",
                "select": {
                  "filter": null
                }
              }
            ]
          }
        },
        {
          "kind": "DataConnector",
          "version": "v2",
          "definition": {
            "name": "remote_3",
            "url": {
              "singleUrl": {
                "value": "http://fake.url"
              }
            },
            "schema": {
              "scalar_types": {
                "int4": {
                  "aggregate_functions": {
                    "bit_and": {
                      "result_type": {
                        "type": "named",
                        "name": "int4"
                      }
                    },
                    "bit_or": {
                      "result_type": {
                        "type": "named",
                        "name": "int4"
                      }
                    },
                    "bit_xor": {
                      "result_type": {
                        "type": "named",
                        "name": "int4"
                      }
                    },
                    "max": {
                      "result_type": {
                        "type": "named",
                        "name": "int4"
                      }
                    },
                    "min": {
                      "result_type": {
                        "type": "named",
                        "name": "int4"
                      }
                    }
                  },
                  "comparison_operators": {
                    "_eq": {
                      "argument_type": {
                        "type": "named",
                        "name": "int4"
                      }
                    },
                    "_gt": {
                      "argument_type": {
                        "type": "named",
                        "name": "int4"
                      }
                    },
                    "_gte": {
                      "argument_type": {
                        "type": "named",
                        "name": "int4"
                      }
                    },
                    "_lt": {
                      "argument_type": {
                        "type": "named",
                        "name": "int4"
                      }
                    },
                    "_lte": {
                      "argument_type": {
                        "type": "named",
                        "name": "int4"
                      }
                    },
                    "_neq": {
                      "argument_type": {
                        "type": "named",
                        "name": "int4"
                      }
                    }
                  }
                },
                "text": {
                  "aggregate_functions": {
                    "max": {
                      "result_type": {
                        "type": "named",
                        "name": "text"
                      }
                    },
                    "min": {
                      "result_type": {
                        "type": "named",
                        "name": "text"
                      }
                    }
                  },
                  "comparison_operators": {
                    "_eq": {
                      "argument_type": {
                        "type": "named",
                        "name": "text"
                      }
                    },
                    "_gt": {
                      "argument_type": {
                        "type": "named",
                        "name": "text"
                      }
                    },
                    "_gte": {
                      "argument_type": {
                        "type": "named",
                        "name": "text"
                      }
                    },
                    "_ilike": {
                      "argument_type": {
                        "type": "named",
                        "name": "text"
                      }
                    },
                    "_iregex": {
                      "argument_type": {
                        "type": "named",
                        "name": "text"
                      }
                    },
                    "_like": {
                      "argument_type": {
                        "type": "named",
                        "name": "text"
                      }
                    },
                    "_lt": {
                      "argument_type": {
                        "type": "named",
                        "name": "text"
                      }
                    },
                    "_lte": {
                      "argument_type": {
                        "type": "named",
                        "name": "text"
                      }
                    },
                    "_neq": {
                      "argument_type": {
                        "type": "named",
                        "name": "text"
                      }
                    },
                    "_nilike": {
                      "argument_type": {
                        "type": "named",
                        "name": "text"
                      }
                    },
                    "_niregex": {
                      "argument_type": {
                        "type": "named",
                        "name": "text"
                      }
                    },
                    "_nlike": {
                      "argument_type": {
                        "type": "named",
                        "name": "text"
                      }
                    },
                    "_nregex": {
                      "argument_type": {
                        "type": "named",
                        "name": "text"
                      }
                    },
                    "_regex": {
                      "argument_type": {
                        "type": "named",
                        "name": "text"
                      }
                    }
                  }
                },
                "uuid": {
                  "aggregate_functions": {},
                  "comparison_operators": {
                    "_eq": {
                      "argument_type": {
                        "type": "named",
                        "name": "uuid"
                      }
                    },
                    "_gt": {
                      "argument_type": {
                        "type": "named",
                        "name": "uuid"
                      }
                    },
                    "_gte": {
                      "argument_type": {
                        "type": "named",
                        "name": "uuid"
                      }
                    },
                    "_lt": {
                      "argument_type": {
                        "type": "named",
                        "name": "uuid"
                      }
                    },
                    "_lte": {
                      "argument_type": {
                        "type": "named",
                        "name": "uuid"
                      }
                    },
                    "_neq": {
                      "argument_type": {
                        "type": "named",
                        "name": "uuid"
                      }
                    }
                  }
                }
              },
              "object_types": {
                "ministers": {
                  "fields": {
                    "department_id": {
                      "type": {
                        "type": "named",
                        "name": "int4"
                      }
                    },
                    "id": {
                      "type": {
                        "type": "named",
                        "name": "int4"
                      }
                    },
                    "name": {
                      "type": {
                        "type": "named",
                        "name": "text"
                      }
                    }
                  }
                }
              },
              "collections": [
                {
                  "name": "ministers",
                  "arguments": {},
                  "type": "ministers",
                  "uniqueness_constraints": {
                    "ministers_pkey": {
                      "unique_columns": [
                        "id"
                      ]
                    }
                  },
                  "foreign_keys": {}
                }
              ],
              "functions": [],
              "procedures": []
            },
            "capabilities": {
              "versions": "^0.1.0",
              "capabilities": {
                "query": {
                  "aggregates": {},
                  "variables": {}
                },
                "explain": {},
                "relationships": {
                  "relation_comparisons": {},
                  "order_by_aggregate": {}
                }
              }
            }
          }
        },
        {
          "kind": "ScalarType",
          "version": "v1",
          "definition": {
            "name": "remote_3_int4",
            "graphql": {
              "typeName": "remote_3_int4"
            }
          }
        },
        {
          "kind": "DataConnectorScalarRepresentation",
          "version": "v1",
          "definition": {
            "dataConnectorName": "remote_3",
            "dataConnectorScalarType": "int4",
            "representation": "remote_3_int4",
            "graphql": {
              "comparisonExpressionTypeName": "remote_3_int4_comparison"
            }
          }
        },
        {
          "kind": "ScalarType",
          "version": "v1",
          "definition": {
            "name": "remote_3_text",
            "graphql": {
              "typeName": "remote_3_text"
            }
          }
        },
        {
          "kind": "DataConnectorScalarRepresentation",
          "version": "v1",
          "definition": {
            "dataConnectorName": "remote_3",
            "dataConnectorScalarType": "text",
            "representation": "remote_3_text",
            "graphql": {
              "comparisonExpressionTypeName": "remote_3_text_comparison"
            }
          }
        },
        {
          "kind": "ScalarType",
          "version": "v1",
          "definition": {
            "name": "remote_3_uuid",
            "graphql": {
              "typeName": "remote_3_uuid"
            }
          }
        },
        {
          "kind": "DataConnectorScalarRepresentation",
          "version": "v1",
          "definition": {
            "dataConnectorName": "remote_3",
            "dataConnectorScalarType": "uuid",
            "representation": "remote_3_uuid",
            "graphql": {
              "comparisonExpressionTypeName": "remote_3_uuid_comparison"
            }
          }
        },
        {
          "kind": "ObjectType",
          "version": "v1",
          "definition": {
            "name": "ministers",
            "fields": [
              {
                "name": "department_id",
                "type": "remote_3_int4!"
              },
              {
                "name": "id",
                "type": "remote_3_int4!"
              },
              {
                "name": "name",
                "type": "remote_3_text!"
              }
            ],
            "globalIdFields": null,
            "graphql": {
              "typeName": "ministers",
              "inputTypeName": null
            }
          }
        },
        {
          "kind": "TypePermissions",
          "version": "v1",
          "definition": {
            "typeName": "ministers",
            "permissions": [
              {
                "role": "admin",
                "output": {
                  "allowedFields": [
                    "department_id",
                    "name",
                    "id"
                  ]
                }
              }
            ]
          }
        },
        {
          "kind": "Model",
          "version": "v1",
          "definition": {
            "name": "ministers",
            "objectType": "ministers",
            "globalIdSource": false,
            "arguments": [],
            "source": {
              "dataConnectorName": "remote_3",
              "collection": "ministers",
              "typeMapping": {
                "ministers": {
                  "fieldMapping": {
                    "id": {
                      "column": "id"
                    },
                    "name": {
                      "column": "name"
                    },
                    "department_id": {
                      "column": "department_id"
                    }
                  }
                }
              },
              "argumentMapping": {}
            },
            "filterableFields": [
              {
                "fieldName": "department_id",
                "operators": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "id",
                "operators": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "name",
                "operators": {
                  "enableAll": true
                }
              }
            ],
            "orderableFields": [
              {
                "fieldName": "department_id",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "id",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "name",
                "orderByDirections": {
                  "enableAll": true
                }
              }
            ],
            "graphql": {
              "selectUniques": [
                {
                  "queryRootField": "ministers_by_id",
                  "uniqueIdentifier": [
                    "id"
                  ]
                }
              ],
              "selectMany": {
                "queryRootField": "ministers"
              },
              "argumentsInputType": null,
              "filterExpressionType": "ministers_bool_exp",
              "orderByExpressionType": "ministers_order_by"
            }
          }
        },
        {
          "kind": "ModelPermissions",
          "version": "v1",
          "definition": {
            "modelName": "ministers",
            "permissions": [
              {
                "role": "admin",
                "select": {
                  "filter": null
                }
              }
            ]
          }
        },
        {
          "kind": "Relationship",
          "version": "v1",
          "definition": {
            "name": "departments",
            "source": "city",
            "target": {
              "model": {
                "name": "departments",
                "namespace": null,
                "subgraph": null,
                "relationshipType": "Array"
              }
            },
            "mapping": [
              {
                "source": {
                  "fieldPath": [
                    {
                      "fieldName": "code"
                    }
                  ]
                },
                "target": {
                  "modelField": [
                    {
                      "fieldName": "city_code"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "kind": "Relationship",
          "version": "v1",
          "definition": {
            "name": "ministers",
            "source": "departments",
            "target": {
              "model": {
                "name": "ministers",
                "namespace": null,
                "subgraph": null,
                "relationshipType": "Array"
              }
            },
            "mapping": [
              {
                "source": {
                  "fieldPath": [
                    {
                      "fieldName": "id"
                    }
                  ]
                },
                "target": {
                  "modelField": [
                    {
                      "fieldName": "department_id"
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    }
  ],
  "flags": {
    "require_ndc_capabilities": false
  }
}
