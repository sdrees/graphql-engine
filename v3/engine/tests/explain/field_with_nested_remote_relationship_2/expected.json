{
  "explain": {
    "type": "sequence",
    "value": [
      {
        "type": "modelSelect",
        "value": {
          "modelName": "Album",
          "queryRequest": {
            "collection": "Album",
            "query": {
              "fields": {
                "AlbumId": {
                  "type": "column",
                  "column": "AlbumId"
                },
                "ArtistId": {
                  "type": "column",
                  "column": "ArtistId"
                },
                "__hasura_phantom_field__AlbumId": {
                  "type": "column",
                  "column": "AlbumId"
                },
                "__hasura_phantom_field__ArtistId": {
                  "type": "column",
                  "column": "ArtistId"
                }
              }
            },
            "arguments": {},
            "collection_relationships": {}
          },
          "ndcExplain": {
            "type": "response",
            "value": {
              "details": {
                "Execution Plan": "Aggregate  (cost=13.17..13.18 rows=1 width=32)\n  ->  Aggregate  (cost=13.15..13.16 rows=1 width=32)\n        ->  Seq Scan on \"Album\" \"%0_Album\"  (cost=0.00..12.10 rows=210 width=8)",
                "SQL Query": "EXPLAIN\nSELECT\n  coalesce(json_agg(row_to_json(\"%1_universe\")), '[]') AS \"universe\"\nFROM\n  (\n    SELECT\n      *\n    FROM\n      (\n        SELECT\n          coalesce(json_agg(row_to_json(\"%2_rows\")), '[]') AS \"rows\"\n        FROM\n          (\n            SELECT\n              \"%0_Album\".\"AlbumId\" AS \"AlbumId\",\n              \"%0_Album\".\"ArtistId\" AS \"ArtistId\",\n              \"%0_Album\".\"AlbumId\" AS \"__hasura_phantom_field__AlbumId\",\n              \"%0_Album\".\"ArtistId\" AS \"__hasura_phantom_field__ArtistId\"\n            FROM\n              \"public\".\"Album\" AS \"%0_Album\"\n          ) AS \"%2_rows\"\n      ) AS \"%2_rows\"\n  ) AS \"%1_universe\""
              }
            }
          }
        }
      },
      {
        "type": "parallel",
        "value": [
          {
            "type": "sequence",
            "value": [
              {
                "type": "forEach",
                "value": {
                  "type": "modelSelect",
                  "value": {
                    "modelName": "Tracks",
                    "queryRequest": {
                      "collection": "Track",
                      "query": {
                        "fields": {
                          "TrackId": {
                            "type": "column",
                            "column": "TrackId"
                          },
                          "__hasura_phantom_field__AlbumId": {
                            "type": "column",
                            "column": "AlbumId"
                          }
                        },
                        "where": {
                          "type": "binary_comparison_operator",
                          "column": {
                            "type": "column",
                            "name": "AlbumId",
                            "path": []
                          },
                          "operator": {
                            "type": "equal"
                          },
                          "value": {
                            "type": "variable",
                            "name": "$AlbumId"
                          }
                        }
                      },
                      "arguments": {},
                      "collection_relationships": {},
                      "variables": []
                    },
                    "ndcExplain": {
                      "type": "response",
                      "value": {
                        "details": {
                          "Execution Plan": "",
                          "SQL Query": "EXPLAIN\nSELECT\n  coalesce(json_agg(\"%5_universe_agg\".\"universe\"), '[]') AS \"universe\"\nFROM\n  (\n    SELECT\n      row_to_json(\"%2_universe\") AS \"universe\"\n    FROM\n      json_to_recordset(cast($1 as json)) AS \"%0_%variables_table\"(\"%variable_order\" int)\n      CROSS JOIN LATERAL (\n        SELECT\n          *\n        FROM\n          (\n            SELECT\n              coalesce(json_agg(row_to_json(\"%3_rows\")), '[]') AS \"rows\"\n            FROM\n              (\n                SELECT\n                  \"%1_Track\".\"TrackId\" AS \"TrackId\",\n                  \"%1_Track\".\"AlbumId\" AS \"__hasura_phantom_field__AlbumId\"\n                FROM\n                  \"public\".\"Track\" AS \"%1_Track\"\n                WHERE\n                  (\n                    \"%1_Track\".\"AlbumId\" = cast(\"%0_%variables_table\".\"$AlbumId\" as int4)\n                  )\n              ) AS \"%3_rows\"\n          ) AS \"%3_rows\"\n      ) AS \"%2_universe\"\n    ORDER BY\n      \"%0_%variables_table\".\"%variable_order\" ASC\n  ) AS \"%5_universe_agg\""
                        }
                      }
                    }
                  }
                }
              },
              {
                "type": "forEach",
                "value": {
                  "type": "modelSelect",
                  "value": {
                    "modelName": "Album",
                    "queryRequest": {
                      "collection": "Album",
                      "query": {
                        "fields": {
                          "AlbumId": {
                            "type": "column",
                            "column": "AlbumId"
                          }
                        },
                        "where": {
                          "type": "binary_comparison_operator",
                          "column": {
                            "type": "column",
                            "name": "AlbumId",
                            "path": []
                          },
                          "operator": {
                            "type": "equal"
                          },
                          "value": {
                            "type": "variable",
                            "name": "$AlbumId"
                          }
                        }
                      },
                      "arguments": {},
                      "collection_relationships": {},
                      "variables": []
                    },
                    "ndcExplain": {
                      "type": "response",
                      "value": {
                        "details": {
                          "Execution Plan": "",
                          "SQL Query": "EXPLAIN\nSELECT\n  coalesce(json_agg(\"%5_universe_agg\".\"universe\"), '[]') AS \"universe\"\nFROM\n  (\n    SELECT\n      row_to_json(\"%2_universe\") AS \"universe\"\n    FROM\n      json_to_recordset(cast($1 as json)) AS \"%0_%variables_table\"(\"%variable_order\" int)\n      CROSS JOIN LATERAL (\n        SELECT\n          *\n        FROM\n          (\n            SELECT\n              coalesce(json_agg(row_to_json(\"%3_rows\")), '[]') AS \"rows\"\n            FROM\n              (\n                SELECT\n                  \"%1_Album\".\"AlbumId\" AS \"AlbumId\"\n                FROM\n                  \"public\".\"Album\" AS \"%1_Album\"\n                WHERE\n                  (\n                    \"%1_Album\".\"AlbumId\" = cast(\"%0_%variables_table\".\"$AlbumId\" as int4)\n                  )\n              ) AS \"%3_rows\"\n          ) AS \"%3_rows\"\n      ) AS \"%2_universe\"\n    ORDER BY\n      \"%0_%variables_table\".\"%variable_order\" ASC\n  ) AS \"%5_universe_agg\""
                        }
                      }
                    }
                  }
                }
              },
              {
                "type": "hashJoin"
              }
            ]
          },
          {
            "type": "forEach",
            "value": {
              "type": "modelSelect",
              "value": {
                "modelName": "Artist",
                "queryRequest": {
                  "collection": "Artist",
                  "query": {
                    "fields": {
                      "ArtistId": {
                        "type": "column",
                        "column": "ArtistId"
                      }
                    },
                    "where": {
                      "type": "binary_comparison_operator",
                      "column": {
                        "type": "column",
                        "name": "ArtistId",
                        "path": []
                      },
                      "operator": {
                        "type": "equal"
                      },
                      "value": {
                        "type": "variable",
                        "name": "$ArtistId"
                      }
                    }
                  },
                  "arguments": {},
                  "collection_relationships": {},
                  "variables": []
                },
                "ndcExplain": {
                  "type": "response",
                  "value": {
                    "details": {
                      "Execution Plan": "",
                      "SQL Query": "EXPLAIN\nSELECT\n  coalesce(json_agg(\"%5_universe_agg\".\"universe\"), '[]') AS \"universe\"\nFROM\n  (\n    SELECT\n      row_to_json(\"%2_universe\") AS \"universe\"\n    FROM\n      json_to_recordset(cast($1 as json)) AS \"%0_%variables_table\"(\"%variable_order\" int)\n      CROSS JOIN LATERAL (\n        SELECT\n          *\n        FROM\n          (\n            SELECT\n              coalesce(json_agg(row_to_json(\"%3_rows\")), '[]') AS \"rows\"\n            FROM\n              (\n                SELECT\n                  \"%1_Artist\".\"ArtistId\" AS \"ArtistId\"\n                FROM\n                  \"public\".\"Artist\" AS \"%1_Artist\"\n                WHERE\n                  (\n                    \"%1_Artist\".\"ArtistId\" = cast(\"%0_%variables_table\".\"$ArtistId\" as int4)\n                  )\n              ) AS \"%3_rows\"\n          ) AS \"%3_rows\"\n      ) AS \"%2_universe\"\n    ORDER BY\n      \"%0_%variables_table\".\"%variable_order\" ASC\n  ) AS \"%5_universe_agg\""
                    }
                  }
                }
              }
            }
          }
        ]
      },
      {
        "type": "hashJoin"
      }
    ]
  }
}